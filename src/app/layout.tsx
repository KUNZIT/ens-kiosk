// app/layout.tsx
import './globals.css';
import type { Metadata } from 'next';
import { Inter } from 'next/font/google';
import { headers } from 'next/headers';
import { type ReactNode, useEffect } from 'react'; // Import useEffect
import { cookieToInitialState } from 'wagmi';

import { getConfig } from '../wagmi';
import { Providers } from './providers';
import { addDefaultNamesToWhitelist } from './whitelist'; // Import the function

const inter = Inter({ subsets: ['latin'] });

export const metadata: Metadata = {
  title: 'Create Wagmi',
  description: 'Generated by create-wagmi',
};

export default function RootLayout(props: { children: ReactNode }) {
  const initialState = cookieToInitialState(
    getConfig(),
    headers().get('cookie'),
  );

  useEffect(() => {
    async function initializeWhitelist() {
      try {
        await addDefaultNamesToWhitelist();
        console.log('Default names added to whitelist.');
      } catch (error) {
        console.error('Error adding default names:', error);
      }
    }

    initializeWhitelist();
  }, []); // Run only once on mount

  return (
    <html lang="en">
      <body className={inter.className}>
        <Providers initialState={initialState}>{props.children}</Providers>
      </body>
    </html>
  );
}